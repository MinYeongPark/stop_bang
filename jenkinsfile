pipeline {
    agent any
    environment {
        DB_HOST="${DB_HOST}"
        DB_USER="${DB_USER}"
        DB_PW="${DB_PW}"
        DB_PORT="${DB_PORT}"
        DB_NAME="${DB_NAME}"

        COOKIE_SECRET_KEY="${COOKIE_SECRET_KEY}"
        NODEMAILER_ID="${NODEMAILER_ID}"
        NODEMAILER_PW="${NODEMAILER_PW}"
        MAILER_HOST="${MAILER_HOST}"
        CERTIFICATION_EMAIL="${CERTIFICATION_EMAIL}"
        JWT_SECRET_KEY="${JWT_SECRET_KEY}"

        BRANCH_NAME="main"
    }
    stages {
        stage('Build Image') {
            steps {
                script {
                    app = docker.build("minyeongpark5/stop_bang:${env.BUILD_ID}")
                }
            }
        }
        stage('Push Image') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'minyeongdockerhub') {
                        app.push("${env.BUILD_NUMBER}")
                        app.push("latest")
                    }
                }
            }
        }
        stage('Deploy to GKE') {
            when {
                branch 'main'
            }
            steps {
                sh "pwd"
                sh "sed -i 's/stop_bang:latest/stop_bang:${env.BUILD_ID}/g' deployment.yaml"
                step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'deployment.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
            }
        }
    }
}